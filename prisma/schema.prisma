// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model AnimalAd {
  id             String        @id @default(uuid())
  name           String
  gender         String
  age            String
  address        String?
  info1          String?
  info2          String?
  description      String?     
  fullDesc       String?    
  createdAt      DateTime      @default(now())

  images         AnimalImage[] 
  tags           AnimalTag[]   @relation("AdTags")
  
  authorId       String?
  author         User?          @relation(fields: [authorId], references: [id])
}

model AnimalImage {
  id        String   @id @default(uuid())
  url       String
  adId      String
  ad        AnimalAd @relation(fields: [adId], references: [id])
}

model AnimalTag {
  id        String      @id @default(uuid())
  label     String      
  ads       AnimalAd[]  @relation("AdTags")
}

model User {
  id       String     @id @default(uuid())
  name     String
  surname  String?
  email    String?    @unique
  phone    String?    @unique
  password String
  avatar    String?
  ads      AnimalAd[] 
  dialogues1 Dialogue[] @relation("User1")
  dialogues2 Dialogue[] @relation("User2")
  dialogues3 Message[] @relation("SenderChat")
}

model Dialogue {
  id        String   @id @default(uuid())
  user1Id   String
  user1     User     @relation("User1", fields: [user1Id], references: [id])
  user2Id   String
  user2     User     @relation("User2", fields: [user2Id], references: [id])
  messages  Message[]
  updatedAt DateTime @updatedAt
}

model Message {
  id         String   @id @default(uuid())
  content    String
  createdAt  DateTime @default(now())
  senderId   String
  sender     User     @relation("SenderChat", fields: [senderId], references: [id])
  dialogueId String
  dialogue   Dialogue @relation(fields: [dialogueId], references: [id])
  isRead     Boolean  @default(false)
  readAt     DateTime?
}


